'use strict';var cov_1b92pz45ge=function(){var path="/Users/bfmags/workspace/news_clock/api/api.js";var hash="d59fdef4e85c4ae3e53809ce6819169846843c6a";var Function=function(){}.constructor;var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/bfmags/workspace/news_clock/api/api.js",statementMap:{"0":{start:{line:3,column:16},end:{line:3,column:34}},"1":{start:{line:4,column:19},end:{line:4,column:49}},"2":{start:{line:7,column:18},end:{line:7,column:42}},"3":{start:{line:8,column:22},end:{line:8,column:43}},"4":{start:{line:9,column:20},end:{line:9,column:57}},"5":{start:{line:10,column:15},end:{line:10,column:62}},"6":{start:{line:13,column:13},end:{line:13,column:29}},"7":{start:{line:14,column:13},end:{line:14,column:22}},"8":{start:{line:15,column:17},end:{line:15,column:32}},"9":{start:{line:18,column:12},end:{line:18,column:21}},"10":{start:{line:22,column:19},end:{line:22,column:33}},"11":{start:{line:23,column:0},end:{line:31,column:7}},"12":{start:{line:26,column:8},end:{line:26,column:32}},"13":{start:{line:29,column:8},end:{line:29,column:32}},"14":{start:{line:30,column:8},end:{line:30,column:60}},"15":{start:{line:34,column:0},end:{line:59,column:5}},"16":{start:{line:36,column:19},end:{line:36,column:36}},"17":{start:{line:37,column:23},end:{line:37,column:45}},"18":{start:{line:39,column:4},end:{line:58,column:5}},"19":{start:{line:42,column:12},end:{line:51,column:19}},"20":{start:{line:45,column:20},end:{line:45,column:44}},"21":{start:{line:46,column:20},end:{line:46,column:65}},"22":{start:{line:49,column:20},end:{line:49,column:44}},"23":{start:{line:50,column:20},end:{line:50,column:77}},"24":{start:{line:52,column:12},end:{line:52,column:18}},"25":{start:{line:55,column:12},end:{line:55,column:36}},"26":{start:{line:56,column:12},end:{line:56,column:58}},"27":{start:{line:57,column:12},end:{line:57,column:18}},"28":{start:{line:62,column:0},end:{line:64,column:3}},"29":{start:{line:63,column:4},end:{line:63,column:21}},"30":{start:{line:66,column:0},end:{line:66,column:23}},"31":{start:{line:67,column:0},end:{line:67,column:49}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:25,column:10},end:{line:25,column:11}},loc:{start:{line:25,column:16},end:{line:27,column:5}},line:25},"1":{name:"(anonymous_1)",decl:{start:{line:28,column:11},end:{line:28,column:12}},loc:{start:{line:28,column:17},end:{line:31,column:5}},line:28},"2":{name:"(anonymous_2)",decl:{start:{line:34,column:20},end:{line:34,column:21}},loc:{start:{line:34,column:34},end:{line:59,column:3}},line:34},"3":{name:"(anonymous_3)",decl:{start:{line:44,column:22},end:{line:44,column:23}},loc:{start:{line:44,column:28},end:{line:47,column:17}},line:44},"4":{name:"(anonymous_4)",decl:{start:{line:48,column:23},end:{line:48,column:24}},loc:{start:{line:48,column:29},end:{line:51,column:17}},line:48},"5":{name:"(anonymous_5)",decl:{start:{line:62,column:13},end:{line:62,column:14}},loc:{start:{line:62,column:27},end:{line:64,column:1}},line:62}},branchMap:{"0":{loc:{start:{line:9,column:20},end:{line:9,column:57}},type:"binary-expr",locations:[{start:{line:9,column:20},end:{line:9,column:40}},{start:{line:9,column:44},end:{line:9,column:57}}],line:9},"1":{loc:{start:{line:39,column:4},end:{line:58,column:5}},type:"switch",locations:[{start:{line:41,column:8},end:{line:52,column:18}},{start:{line:54,column:8},end:{line:57,column:18}}],line:39}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const express=(cov_1b92pz45ge.s[0]++,require('express'));const{CasparCG}=(cov_1b92pz45ge.s[1]++,require("casparcg-connection"));// Load configuration
const configOBJ=(cov_1b92pz45ge.s[2]++,require('./config.json'));const defaultConfig=(cov_1b92pz45ge.s[3]++,configOBJ.development);const environment=(cov_1b92pz45ge.s[4]++,(cov_1b92pz45ge.b[0][0]++,process.env.NODE_ENV)||(cov_1b92pz45ge.b[0][1]++,'development'));const config=(cov_1b92pz45ge.s[5]++,{...defaultConfig,...configOBJ[environment]});// Constants
const PORT=(cov_1b92pz45ge.s[6]++,config.node_port);const HOST=(cov_1b92pz45ge.s[7]++,'0.0.0.0');const CASPARCG=(cov_1b92pz45ge.s[8]++,config.casparcg);// Server API
const api=(cov_1b92pz45ge.s[9]++,express());// Connect to CasparCG Server and 
// load news clock template
const connection=(cov_1b92pz45ge.s[10]++,new CasparCG());cov_1b92pz45ge.s[11]++;connection.cgAdd(1,1,1,'main/MAIN',true).then(()=>{cov_1b92pz45ge.f[0]++;cov_1b92pz45ge.s[12]++;connection.disconnect();}).catch(()=>{cov_1b92pz45ge.f[1]++;cov_1b92pz45ge.s[13]++;connection.disconnect();cov_1b92pz45ge.s[14]++;console.log({message:"Could not load template"});});// Set up API 
cov_1b92pz45ge.s[15]++;api.get("/:action",(req,res)=>{cov_1b92pz45ge.f[2]++;const action=(cov_1b92pz45ge.s[16]++,req.params.action);const connection=(cov_1b92pz45ge.s[17]++,new CasparCG(CASPARCG));cov_1b92pz45ge.s[18]++;switch(action){// start updating clock
case"on":cov_1b92pz45ge.b[1][0]++;cov_1b92pz45ge.s[19]++;connection.cgInvoke(1,1,1,"leftTab('on', 'BBC NEWS HH:MM')").then(()=>{cov_1b92pz45ge.f[3]++;cov_1b92pz45ge.s[20]++;connection.disconnect();cov_1b92pz45ge.s[21]++;res.json({message:"News Clock updated."});}).catch(()=>{cov_1b92pz45ge.f[4]++;cov_1b92pz45ge.s[22]++;connection.disconnect();cov_1b92pz45ge.s[23]++;res.json({message:"Error sending CasparCG command."});});cov_1b92pz45ge.s[24]++;break;default:cov_1b92pz45ge.b[1][1]++;cov_1b92pz45ge.s[25]++;connection.disconnect();cov_1b92pz45ge.s[26]++;res.json({message:"Parameter not valid."});cov_1b92pz45ge.s[27]++;break;}});// log current config
cov_1b92pz45ge.s[28]++;api.get('/',(req,res)=>{cov_1b92pz45ge.f[5]++;cov_1b92pz45ge.s[29]++;res.send(config);});cov_1b92pz45ge.s[30]++;api.listen(PORT,HOST);cov_1b92pz45ge.s[31]++;console.log(`Running on http://${HOST}:${PORT}`);