'use strict';var cov_1b92pz45ge=function(){var path="/Users/bfmags/workspace/news_clock/api/api.js";var hash="1d57ac27cf1f2a87d0b89e3b41857c3bfb791011";var Function=function(){}.constructor;var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/bfmags/workspace/news_clock/api/api.js",statementMap:{"0":{start:{line:3,column:16},end:{line:3,column:34}},"1":{start:{line:4,column:13},end:{line:4,column:37}},"2":{start:{line:5,column:19},end:{line:5,column:49}},"3":{start:{line:8,column:18},end:{line:8,column:42}},"4":{start:{line:9,column:22},end:{line:9,column:43}},"5":{start:{line:10,column:20},end:{line:10,column:57}},"6":{start:{line:11,column:15},end:{line:11,column:62}},"7":{start:{line:14,column:13},end:{line:14,column:29}},"8":{start:{line:15,column:13},end:{line:15,column:22}},"9":{start:{line:16,column:17},end:{line:16,column:32}},"10":{start:{line:19,column:12},end:{line:19,column:21}},"11":{start:{line:23,column:19},end:{line:23,column:33}},"12":{start:{line:24,column:0},end:{line:32,column:7}},"13":{start:{line:27,column:8},end:{line:27,column:32}},"14":{start:{line:30,column:8},end:{line:30,column:32}},"15":{start:{line:31,column:8},end:{line:31,column:60}},"16":{start:{line:35,column:0},end:{line:81,column:5}},"17":{start:{line:37,column:19},end:{line:37,column:36}},"18":{start:{line:38,column:23},end:{line:38,column:45}},"19":{start:{line:40,column:4},end:{line:80,column:5}},"20":{start:{line:45,column:12},end:{line:58,column:21}},"21":{start:{line:46,column:28},end:{line:46,column:60}},"22":{start:{line:47,column:16},end:{line:56,column:23}},"23":{start:{line:50,column:24},end:{line:50,column:48}},"24":{start:{line:51,column:24},end:{line:51,column:69}},"25":{start:{line:54,column:24},end:{line:54,column:48}},"26":{start:{line:55,column:24},end:{line:55,column:81}},"27":{start:{line:59,column:12},end:{line:59,column:18}},"28":{start:{line:62,column:12},end:{line:73,column:21}},"29":{start:{line:63,column:16},end:{line:72,column:23}},"30":{start:{line:66,column:24},end:{line:66,column:48}},"31":{start:{line:67,column:24},end:{line:67,column:74}},"32":{start:{line:70,column:24},end:{line:70,column:48}},"33":{start:{line:71,column:24},end:{line:71,column:81}},"34":{start:{line:74,column:12},end:{line:74,column:18}},"35":{start:{line:77,column:12},end:{line:77,column:36}},"36":{start:{line:78,column:12},end:{line:78,column:58}},"37":{start:{line:79,column:12},end:{line:79,column:18}},"38":{start:{line:84,column:0},end:{line:86,column:3}},"39":{start:{line:85,column:4},end:{line:85,column:21}},"40":{start:{line:88,column:0},end:{line:88,column:23}},"41":{start:{line:89,column:0},end:{line:89,column:49}},"42":{start:{line:92,column:0},end:{line:92,column:21}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:26,column:10},end:{line:26,column:11}},loc:{start:{line:26,column:16},end:{line:28,column:5}},line:26},"1":{name:"(anonymous_1)",decl:{start:{line:29,column:11},end:{line:29,column:12}},loc:{start:{line:29,column:17},end:{line:32,column:5}},line:29},"2":{name:"(anonymous_2)",decl:{start:{line:35,column:20},end:{line:35,column:21}},loc:{start:{line:35,column:34},end:{line:81,column:3}},line:35},"3":{name:"(anonymous_3)",decl:{start:{line:45,column:25},end:{line:45,column:26}},loc:{start:{line:45,column:31},end:{line:58,column:13}},line:45},"4":{name:"(anonymous_4)",decl:{start:{line:49,column:26},end:{line:49,column:27}},loc:{start:{line:49,column:32},end:{line:52,column:21}},line:49},"5":{name:"(anonymous_5)",decl:{start:{line:53,column:27},end:{line:53,column:28}},loc:{start:{line:53,column:33},end:{line:56,column:21}},line:53},"6":{name:"(anonymous_6)",decl:{start:{line:62,column:25},end:{line:62,column:26}},loc:{start:{line:62,column:31},end:{line:73,column:13}},line:62},"7":{name:"(anonymous_7)",decl:{start:{line:65,column:26},end:{line:65,column:27}},loc:{start:{line:65,column:32},end:{line:68,column:21}},line:65},"8":{name:"(anonymous_8)",decl:{start:{line:69,column:27},end:{line:69,column:28}},loc:{start:{line:69,column:33},end:{line:72,column:21}},line:69},"9":{name:"(anonymous_9)",decl:{start:{line:84,column:13},end:{line:84,column:14}},loc:{start:{line:84,column:27},end:{line:86,column:1}},line:84}},branchMap:{"0":{loc:{start:{line:10,column:20},end:{line:10,column:57}},type:"binary-expr",locations:[{start:{line:10,column:20},end:{line:10,column:40}},{start:{line:10,column:44},end:{line:10,column:57}}],line:10},"1":{loc:{start:{line:40,column:4},end:{line:80,column:5}},type:"switch",locations:[{start:{line:43,column:8},end:{line:59,column:18}},{start:{line:61,column:8},end:{line:74,column:18}},{start:{line:76,column:8},end:{line:79,column:18}}],line:40}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},b:{"0":[0,0],"1":[0,0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const express=(cov_1b92pz45ge.s[0]++,require('express'));const date=(cov_1b92pz45ge.s[1]++,require('date-and-time'));const{CasparCG}=(cov_1b92pz45ge.s[2]++,require("casparcg-connection"));// Load configuration
const configOBJ=(cov_1b92pz45ge.s[3]++,require('./config.json'));const defaultConfig=(cov_1b92pz45ge.s[4]++,configOBJ.development);const environment=(cov_1b92pz45ge.s[5]++,(cov_1b92pz45ge.b[0][0]++,process.env.NODE_ENV)||(cov_1b92pz45ge.b[0][1]++,'development'));const config=(cov_1b92pz45ge.s[6]++,{...defaultConfig,...configOBJ[environment]});// Constants
const PORT=(cov_1b92pz45ge.s[7]++,config.node_port);const HOST=(cov_1b92pz45ge.s[8]++,'0.0.0.0');const CASPARCG=(cov_1b92pz45ge.s[9]++,config.casparcg);// Server API
const api=(cov_1b92pz45ge.s[10]++,express());// Connect to CasparCG Server and 
// load news clock template
const connection=(cov_1b92pz45ge.s[11]++,new CasparCG());cov_1b92pz45ge.s[12]++;connection.cgAdd(1,1,1,'main/MAIN',true).then(()=>{cov_1b92pz45ge.f[0]++;cov_1b92pz45ge.s[13]++;connection.disconnect();}).catch(()=>{cov_1b92pz45ge.f[1]++;cov_1b92pz45ge.s[14]++;connection.disconnect();cov_1b92pz45ge.s[15]++;console.log({message:"Could not load template"});});// Set up API 
cov_1b92pz45ge.s[16]++;api.get("/:action",(req,res)=>{cov_1b92pz45ge.f[2]++;const action=(cov_1b92pz45ge.s[17]++,req.params.action);const connection=(cov_1b92pz45ge.s[18]++,new CasparCG(CASPARCG));cov_1b92pz45ge.s[19]++;switch(action){// start updating clock
// TODO: move casparCG related to it's own file
case"on":cov_1b92pz45ge.b[1][0]++;cov_1b92pz45ge.s[20]++;// TODO: save reference to clear it
setInterval(()=>{cov_1b92pz45ge.f[3]++;const now=(cov_1b92pz45ge.s[21]++,date.format(new Date(),'hh:mm'));cov_1b92pz45ge.s[22]++;connection.cgInvoke(1,1,1,`"leftTab('on', 'BBC NEWS ${now}')"`).then(()=>{cov_1b92pz45ge.f[4]++;cov_1b92pz45ge.s[23]++;connection.disconnect();cov_1b92pz45ge.s[24]++;res.json({message:"News Clock updated."});}).catch(()=>{cov_1b92pz45ge.f[5]++;cov_1b92pz45ge.s[25]++;connection.disconnect();cov_1b92pz45ge.s[26]++;res.json({message:"Error sending CasparCG command."});});},1000);cov_1b92pz45ge.s[27]++;break;case"off":cov_1b92pz45ge.b[1][1]++;cov_1b92pz45ge.s[28]++;setInterval(()=>{cov_1b92pz45ge.f[6]++;cov_1b92pz45ge.s[29]++;connection.cgInvoke(1,1,1,"leftTab('off')").then(()=>{cov_1b92pz45ge.f[7]++;cov_1b92pz45ge.s[30]++;connection.disconnect();cov_1b92pz45ge.s[31]++;res.json({message:"News Clock animated out."});}).catch(()=>{cov_1b92pz45ge.f[8]++;cov_1b92pz45ge.s[32]++;connection.disconnect();cov_1b92pz45ge.s[33]++;res.json({message:"Error sending CasparCG command."});});},1000);cov_1b92pz45ge.s[34]++;break;default:cov_1b92pz45ge.b[1][2]++;cov_1b92pz45ge.s[35]++;connection.disconnect();cov_1b92pz45ge.s[36]++;res.json({message:"Parameter not valid."});cov_1b92pz45ge.s[37]++;break;}});cov_1b92pz45ge.s[38]++;api.get('/',(req,res)=>{cov_1b92pz45ge.f[9]++;cov_1b92pz45ge.s[39]++;res.send(config);});cov_1b92pz45ge.s[40]++;api.listen(PORT,HOST);cov_1b92pz45ge.s[41]++;console.log(`Running on http://${HOST}:${PORT}`);// for supertest
cov_1b92pz45ge.s[42]++;module.exports=api;